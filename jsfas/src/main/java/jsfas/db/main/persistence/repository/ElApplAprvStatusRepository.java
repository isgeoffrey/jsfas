package jsfas.db.main.persistence.repository;

import java.util.List;

import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import jsfas.common.constants.ApplStatusConstants;
import jsfas.db.CommonRepository;
import jsfas.db.main.persistence.domain.ElApplAprvStatusDAO;

public interface ElApplAprvStatusRepository extends CommonRepository<ElApplAprvStatusDAO, String> {

	@Query(value = "SELECT * FROM EL_APPL_APRV_STATUS WHERE appl_hdr_id = :applHdrId AND id NOT IN :idList ", nativeQuery = true)
	List<ElApplAprvStatusDAO> findByApplHdrIdForRemove(@Param("applHdrId") String applHdrId, @Param("idList")  List<String> upsertDAOId);

	@Query( value = "SELECT * FROM EL_APPL_APRV_STATUS WHERE appl_hdr_id = :applHdrId ORDER BY arpv_seq, aprv_user_id ", nativeQuery = true)
	List<ElApplAprvStatusDAO> findByApplHdrId(@Param("applHdrId") String applHdrId);
	
	@Query(value = ""
			+ "SELECT "
			+ "    aprv.* "
			+ "FROM "
			+ "    el_appl_aprv_status aprv "
			+ "    INNER JOIN ( "
			+ "        SELECT "
			+ "            * "
			+ "        FROM "
			+ "            ( "
			+ "                SELECT "
			+ "                    ROW_NUMBER() "
			+ "                    OVER(PARTITION BY el_appl_aprv_status.appl_hdr_id "
			+ "                         ORDER BY "
			+ "                             el_appl_aprv_status.arpv_seq, aprv_user_id "
			+ "                    ) rn, "
			+ "                    el_appl_aprv_status.id, "
			+ "                    el_appl_aprv_status.appl_hdr_id, "
			+ "                    el_appl_aprv_status.aprv_user_id "
			+ "                FROM "
			+ "                    el_appl_aprv_status "
			+ "                WHERE "
			+ "                    el_appl_aprv_status.approved = -1 "
			+ "                    AND appl_hdr_id = :appl_hdr_id "
			+ "            ) "
			+ "        WHERE "
			+ "            rn = 1 "
			+ "    )           c ON aprv.id = c.id "
			+ "    INNER JOIN el_appl_hdr hdr ON hdr.id = aprv.appl_hdr_id "
			+ "WHERE "
			+ "    hdr.obsolete = 0 "
			+ "    AND hdr.appl_stat_cde = '" + ApplStatusConstants.PENDING + "'", nativeQuery = true)
	ElApplAprvStatusDAO findNextAprv(@Param("appl_hdr_id") String applHdrId);
	
	@Query( value = "SELECT * FROM EL_APPL_APRV_STATUS WHERE appl_hdr_id = :appl_hdr_id AND approved = -1 ORDER BY arpv_seq, aprv_user_id ", nativeQuery = true)
	List<ElApplAprvStatusDAO> findAllPendingAprv(@Param("appl_hdr_id") String applHdrId);
	
	@Query(value = ""
			+ "SELECT "
			+ "    aprv.* "
			+ "FROM "
			+ "    el_appl_aprv_status aprv "
			+ "    INNER JOIN ( "
			+ "        SELECT "
			+ "            * "
			+ "        FROM "
			+ "            ( "
			+ "                SELECT "
			+ "                    ROW_NUMBER() "
			+ "                    OVER(PARTITION BY el_appl_aprv_status.appl_hdr_id "
			+ "                         ORDER BY "
			+ "                             el_appl_aprv_status.arpv_seq, aprv_user_id "
			+ "                    ) rn, "
			+ "                    el_appl_aprv_status.id, "
			+ "                    el_appl_aprv_status.appl_hdr_id, "
			+ "                    el_appl_aprv_status.aprv_user_id "
			+ "                FROM "
			+ "                    el_appl_aprv_status "
			+ "                WHERE "
			+ "                    el_appl_aprv_status.approved = -1 "
			+ "                    AND appl_hdr_id = :appl_hdr_id "
			+ "            ) "
			+ "        WHERE "
			+ "            rn = 1 "
			+ "    )           c ON aprv.id = c.id "
			+ "    INNER JOIN el_appl_hdr hdr ON hdr.id = aprv.appl_hdr_id "
			+ "WHERE "
			+ "    hdr.obsolete = 0 "
			+ "    AND hdr.appl_stat_cde = '" + ApplStatusConstants.PENDING_PYMT_APPR + "'", nativeQuery = true)
	ElApplAprvStatusDAO findNextPymtAprv(@Param("appl_hdr_id") String applHdrId);
	
	@Query(value = ""
			+ "SELECT "
			+ "    aprv.* "
			+ "FROM "
			+ "    el_appl_aprv_status aprv "
			+ "    INNER JOIN ( "
			+ "        SELECT "
			+ "            * "
			+ "        FROM "
			+ "            ( "
			+ "                SELECT "
			+ "                    ROW_NUMBER() "
			+ "                    OVER(PARTITION BY el_appl_aprv_status.appl_hdr_id "
			+ "                         ORDER BY "
			+ "                             el_appl_aprv_status.arpv_seq, aprv_user_id "
			+ "                    ) rn, "
			+ "                    dense_rank()  "
			+ "			           OVER(PARTITION BY el_appl_aprv_status.appl_hdr_id  "
			+ "			           		ORDER BY  "
			+ "			                	el_appl_aprv_status.arpv_seq "
			+ "			           ) seq_rn, "
			+ "                    el_appl_aprv_status.id, "
			+ "                    el_appl_aprv_status.appl_hdr_id, "
			+ "                    el_appl_aprv_status.aprv_user_id, "
			+ "                    el_appl_aprv_status.aprv_type_cde "
			+ "                FROM "
			+ "                    el_appl_aprv_status "
			+ "                WHERE "
			+ "                    el_appl_aprv_status.approved = -1 "
			+ "                    AND appl_hdr_id = :appl_hdr_id "
			+ "            ) "
			+ "        WHERE "
			+ "            rn = 1 "
			+ "			   OR (seq_rn = 1 AND aprv_type_cde in ('FO_SR', 'FO_SFM' ,'FO_PNB', 'FO_RECTIFY') ) "
			+ "    )           c ON aprv.id = c.id "
			+ "    INNER JOIN el_appl_hdr hdr ON hdr.id = aprv.appl_hdr_id "
			+ "WHERE "
			+ "    hdr.obsolete = 0 "
			+ "    AND hdr.appl_stat_cde = '" + ApplStatusConstants.PENDING_PYMT_APPR + "' "
			+ "	   ORDER BY aprv.aprv_user_id ", nativeQuery = true)
	List<ElApplAprvStatusDAO> findAllNextPymtAprv(@Param("appl_hdr_id") String applHdrId);
	
	@Query(value = ""
			+ "SELECT "
			+ "    aprv.* "
			+ "FROM "
			+ "    el_appl_aprv_status aprv "
			+ "    INNER JOIN ( "
			+ "        SELECT "
			+ "            * "
			+ "        FROM "
			+ "            ( "
			+ "                SELECT "
			+ "                    ROW_NUMBER() "
			+ "                    OVER(PARTITION BY el_appl_aprv_status.appl_hdr_id "
			+ "                         ORDER BY "
			+ "                             el_appl_aprv_status.arpv_seq, aprv_user_id "
			+ "                    ) rn, "
			+ "                    el_appl_aprv_status.id, "
			+ "                    el_appl_aprv_status.appl_hdr_id, "
			+ "                    el_appl_aprv_status.aprv_user_id "
			+ "                FROM "
			+ "                    el_appl_aprv_status "
			+ "                WHERE "
			+ "                    el_appl_aprv_status.approved = -1 "
			+ "                    AND appl_hdr_id = :appl_hdr_id "
			+ "            ) "
			+ "        WHERE "
			+ "            rn = 1 "
			+ "    )           c ON aprv.id = c.id "
			+ "    INNER JOIN el_appl_hdr hdr ON hdr.id = aprv.appl_hdr_id "
			+ "WHERE "
			+ "    hdr.obsolete = 0 "
			+ "    AND hdr.appl_stat_cde = '" + ApplStatusConstants.PENDING_FOPNB + "'", nativeQuery = true)
	ElApplAprvStatusDAO findNextPymtFOAprv(@Param("appl_hdr_id") String applHdrId);
	
	@Query(value = ""
			+ "SELECT "
			+ "    aprv.* "
			+ "FROM "
			+ "    el_appl_aprv_status aprv "
			+ "    INNER JOIN ( "
			+ "        SELECT "
			+ "            * "
			+ "        FROM "
			+ "            ( "
			+ "                SELECT "
			+ "                    ROW_NUMBER() "
			+ "                    OVER(PARTITION BY el_appl_aprv_status.appl_hdr_id "
			+ "                         ORDER BY "
			+ "                             el_appl_aprv_status.arpv_seq, aprv_user_id "
			+ "                    ) rn, "
			+ "                    dense_rank()  "
			+ "			           OVER(PARTITION BY el_appl_aprv_status.appl_hdr_id  "
			+ "			           		ORDER BY  "
			+ "			                	el_appl_aprv_status.arpv_seq "
			+ "			           ) seq_rn, "
			+ "                    el_appl_aprv_status.id, "
			+ "                    el_appl_aprv_status.appl_hdr_id, "
			+ "                    el_appl_aprv_status.aprv_user_id, "
			+ "                    el_appl_aprv_status.aprv_type_cde "
			+ "                FROM "
			+ "                    el_appl_aprv_status "
			+ "                WHERE "
			+ "                    el_appl_aprv_status.approved = -1 "
			+ "                    AND appl_hdr_id = :appl_hdr_id "
			+ "            ) "
			+ "        WHERE "
			+ "            rn = 1 "
			+ "			   OR (seq_rn = 1 AND aprv_type_cde = 'FO_PNB' ) "
			+ "    )           c ON aprv.id = c.id "
			+ "    INNER JOIN el_appl_hdr hdr ON hdr.id = aprv.appl_hdr_id "
			+ "WHERE "
			+ "    hdr.obsolete = 0 "
			+ "    AND hdr.appl_stat_cde = '" + ApplStatusConstants.PENDING_FOPNB + "'", nativeQuery = true)
	List<ElApplAprvStatusDAO> findAllNextPymtFOAprv(@Param("appl_hdr_id") String applHdrId);
	
	@Query(value = ""
			+ "SELECT "
			+ "    aprv.* "
			+ "FROM "
			+ "    el_appl_aprv_status aprv "
			+ "    INNER JOIN ( "
			+ "        SELECT "
			+ "            * "
			+ "        FROM "
			+ "            ( "
			+ "                SELECT "
			+ "                    ROW_NUMBER() "
			+ "                    OVER(PARTITION BY el_appl_aprv_status.appl_hdr_id "
			+ "                         ORDER BY "
			+ "                             el_appl_aprv_status.arpv_seq, aprv_user_id "
			+ "                    ) rn, "
			+ "                    el_appl_aprv_status.id, "
			+ "                    el_appl_aprv_status.appl_hdr_id, "
			+ "                    el_appl_aprv_status.aprv_user_id "
			+ "                FROM "
			+ "                    el_appl_aprv_status "
			+ "                WHERE "
			+ "                    el_appl_aprv_status.approved = -1 "
			+ "                    AND appl_hdr_id = :appl_hdr_id "
			+ "            ) "
			+ "        WHERE "
			+ "            rn = 1 "
			+ "    )           c ON aprv.id = c.id "
			+ "    INNER JOIN el_appl_hdr hdr ON hdr.id = aprv.appl_hdr_id "
			+ "WHERE "
			+ "    hdr.obsolete = 0 "
			+ "    AND hdr.appl_stat_cde = '" + ApplStatusConstants.PENDING_RECTIFY + "'", nativeQuery = true)
	ElApplAprvStatusDAO findNextPymtFOSRAprv(@Param("appl_hdr_id") String applHdrId);
	
	@Query(value = ""
			+ "SELECT "
			+ "    aprv.* "
			+ "FROM "
			+ "    el_appl_aprv_status aprv "
			+ "    INNER JOIN ( "
			+ "        SELECT "
			+ "            * "
			+ "        FROM "
			+ "            ( "
			+ "                SELECT "
			+ "                    ROW_NUMBER() "
			+ "                    OVER(PARTITION BY el_appl_aprv_status.appl_hdr_id "
			+ "                         ORDER BY "
			+ "                             el_appl_aprv_status.arpv_seq, aprv_user_id "
			+ "                    ) rn, "
			+ "                    dense_rank()  "
			+ "			           OVER(PARTITION BY el_appl_aprv_status.appl_hdr_id  "
			+ "			           		ORDER BY  "
			+ "			                	el_appl_aprv_status.arpv_seq "
			+ "			           ) seq_rn, "
			+ "                    el_appl_aprv_status.id, "
			+ "                    el_appl_aprv_status.appl_hdr_id, "
			+ "                    el_appl_aprv_status.aprv_user_id, "
			+ "                    el_appl_aprv_status.aprv_type_cde "
			+ "                FROM "
			+ "                    el_appl_aprv_status "
			+ "                WHERE "
			+ "                    el_appl_aprv_status.approved = -1 "
			+ "                    AND appl_hdr_id = :appl_hdr_id "
			+ "            ) "
			+ "        WHERE "
			+ "            rn = 1 "
			+ "			   OR (seq_rn = 1 AND aprv_type_cde = 'FO_RECTIFY' ) "
			+ "    )           c ON aprv.id = c.id "
			+ "    INNER JOIN el_appl_hdr hdr ON hdr.id = aprv.appl_hdr_id "
			+ "WHERE "
			+ "    hdr.obsolete = 0 "
			+ "    AND hdr.appl_stat_cde = '" + ApplStatusConstants.PENDING_RECTIFY + "'", nativeQuery = true)
	List<ElApplAprvStatusDAO> findAllNextFORectifyAprv(@Param("appl_hdr_id") String applHdrId);
	
	@Query(value = "SELECT MAX(arpv_seq) FROM el_appl_aprv_status WHERE appl_hdr_id = :appl_hdr_id GROUP BY appl_hdr_id ", nativeQuery = true)
	Integer findMaxAprvSeq(@Param("appl_hdr_id") String applHdrId);
	
	@Query(value = ""
			+ "SELECT aprv.* FROM EL_APPL_HDR hdr "
			+ "JOIN EL_APPL_APRV_STATUS aprv ON hdr.id = aprv.appl_hdr_id "
			+ "WHERE hdr.id = :appl_hdr_id "
			+ "AND aprv.approved = 1 "
			+ "UNION  "
			+ "SELECT  "
			+ "    aprv.*  "
			+ "FROM  "
			+ "    el_appl_aprv_status aprv  "
			+ "    INNER JOIN (  "
			+ "        SELECT  "
			+ "            *  "
			+ "        FROM  "
			+ "            (  "
			+ "                SELECT  "
			+ "                    ROW_NUMBER()  "
			+ "                    OVER(PARTITION BY el_appl_aprv_status.appl_hdr_id  "
			+ "                         ORDER BY  "
			+ "                             el_appl_aprv_status.arpv_seq, aprv_user_id  "
			+ "                    ) rn,  "
			+ "                    el_appl_aprv_status.id,  "
			+ "                    el_appl_aprv_status.appl_hdr_id,  "
			+ "                    el_appl_aprv_status.aprv_user_id  "
			+ "                FROM  "
			+ "                    el_appl_aprv_status  "
			+ "                WHERE  "
			+ "                    el_appl_aprv_status.approved = -1  "
			+ "                    AND appl_hdr_id = :appl_hdr_id  "
			+ "                    AND NOT EXISTS (SELECT * FROM el_appl_aprv_status WHERE appl_hdr_id = :appl_hdr_id AND approved = 0 ) "
			+ "            )  "
			+ "        WHERE  "
			+ "            rn = 1  "
			+ "    )           c ON aprv.id = c.id  "
			+ "    INNER JOIN el_appl_hdr hdr ON hdr.id = aprv.appl_hdr_id ", nativeQuery = true)
	List<ElApplAprvStatusDAO> findApprovedAndPendingAprv(@Param("appl_hdr_id") String applHdrId);
	
	List<ElApplAprvStatusDAO> findByApplHdrIdAndAprvTypeCde(String applHdrId, String cprvTypeCde);
	
	@Query( value = "SELECT * FROM EL_APPL_APRV_STATUS WHERE appl_hdr_id = :applHdrId AND approved = 0 AND ROWNUM = 1 ORDER BY aprv_dttm DESC ", nativeQuery = true)
	ElApplAprvStatusDAO findRecentRejectorByApplHdrId(@Param("applHdrId") String applHdrId);
	
	@Query( value = "SELECT * FROM EL_APPL_APRV_STATUS WHERE appl_hdr_id = :appl_hdr_id AND aprv_type_cde NOT IN ('FO_SR', 'FO_SRM', 'FO_PNB', 'FO_RECTIFY') ", nativeQuery = true)
	List<ElApplAprvStatusDAO> findAllPendingNonFOAprv(@Param("appl_hdr_id") String applHdrId);
	
	List<ElApplAprvStatusDAO> findByApplHdrIdAndAprvTypeCdeAndIdNot(String applHdrId, String aprvTypeCde, String id);
	
	@Query( value = "SELECT * FROM EL_APPL_APRV_STATUS WHERE appl_hdr_id = :applHdrId AND aprv_type_cde = 'FO_SR' ", nativeQuery = true)
	List<ElApplAprvStatusDAO> findFoSRByByApplHdrId(@Param("applHdrId") String applHdrId);
	
	@Query( value = "SELECT * FROM EL_APPL_APRV_STATUS WHERE appl_hdr_id = :applHdrId AND approved = 1 and arpv_seq = (SELECT MAX(arpv_seq) FROM EL_APPL_APRV_STATUS WHERE appl_hdr_id = :applHdrId AND approved = 1) ", nativeQuery = true)
	ElApplAprvStatusDAO findRecentApproveByApplHdrId(@Param("applHdrId") String applHdrId);
}
